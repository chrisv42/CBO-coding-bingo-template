from colorama import Fore
from Q1_INSERTTEAMNUMBER import sudoku_solver

TEST_INPUT = [
    [
        [8, 6, 0, 0, 2, 0, 0, 0, 0],
        [0, 0, 0, 7, 0, 0, 0, 5, 9],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 6, 0, 8, 0, 0],
        [0, 4, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 5, 3, 0, 0, 0, 0, 7],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 2, 0, 0, 0, 0, 6, 0, 0],
        [0, 0, 7, 5, 0, 9, 0, 0, 0],
    ],
    [
        [5, 3, 0, 0, 7, 0, 0, 0, 0],
        [6, 0, 0, 1, 9, 5, 0, 0, 0],
        [0, 9, 8, 0, 0, 0, 0, 6, 0],
        [8, 0, 0, 0, 6, 0, 0, 0, 3],
        [4, 0, 0, 8, 0, 3, 0, 0, 1],
        [7, 0, 0, 0, 2, 0, 0, 0, 6],
        [0, 6, 0, 0, 0, 0, 2, 8, 0],
        [0, 0, 0, 4, 1, 9, 0, 0, 5],
        [0, 0, 0, 0, 8, 0, 0, 7, 9],
    ],
]

"""
DO NOT EDIT THIS FILE BEYOND THIS POINT. IT MAY INTERFERE WITH TESTING.
"""


def is_in_range(board):
    N = 9
    for i in range(0, N):
        for j in range(0, N):
            if (board[i][j] <= 0) or (board[i][j] > 9):
                return False

    return True


def is_valid_sudoku(board):
    N = 9
    if is_in_range(board) == False:
        return False

    unique = [False] * (N + 1)
    for i in range(0, N):

        for m in range(0, N + 1):
            unique[m] = False
        for j in range(0, N):
            Z = board[i][j]
            if unique[Z] == True:
                return False

            unique[Z] = True

    for i in range(0, N):
        for m in range(0, N + 1):
            unique[m] = False
        for j in range(0, N):
            Z = board[j][i]
            if unique[Z] == True:
                return False

            unique[Z] = True

    for i in range(0, N - 2, 3):
        for j in range(0, N - 2, 3):
            for m in range(0, N + 1):
                unique[m] = False
            for k in range(0, 3):
                for l in range(0, 3):
                    X = i + k
                    Y = j + l
                    Z = board[X][Y]

                    if unique[Z] == True:
                        return False

                    unique[Z] = True

    return True


def print_board(board):
    print(Fore.RED + "\n-------------------------")
    for i in range(9):
        for j in range(9):
            if board[i][j] is not None:
                if j == 0:
                    print(Fore.RED + "|", end=" ")
                print(Fore.RED + f"{board[i][j]} ", end="")
            if (j + 1) % 3 == 0:
                print(Fore.RED + "|", end=" ")
        if (i + 1) % 3 == 0:
            print(Fore.RED + "\n-------------------------", end=" ")
        print()


def test_function():
    for inp in TEST_INPUT:
        res = sudoku_solver(inp)
        if not is_valid_sudoku(res):
            print(Fore.RED + "Incorrect result. Given the board: ")
            print_board(inp)
            print(Fore.RED + " Your function returned the result: ")
            print_board(res)
            return

    print(Fore.GREEN + "All tests passed!")


def main():
    test_function()


if __name__ == "__main__":
    main()
